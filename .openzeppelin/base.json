{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xC34dbb7735d574ABf98f38fB0F20134092e89df0",
      "txHash": "0x2c97637b193fc0f86d125f984a30e3a67bd6fb40dd3a4576fde8f14308724590",
      "kind": "uups"
    },
    {
      "address": "0x63669043341cC2D6d74B6f25c9a3FE437aAEf0e5",
      "txHash": "0x5514560b2b5351c1c96016476684b46629b89e95a2f7fb522caa11b73d98a355",
      "kind": "uups"
    },
    {
      "address": "0x6251fD098A719c6b69b3DFdC95bfA9f0FA2F4A05",
      "txHash": "0xfe2f9c800bcde4838600860ea58872c8aedc90c5502b9470f437c5ed8e9e531d",
      "kind": "uups"
    },
    {
      "address": "0x881881aD498AFE7700d8C005d12A156c0680d993",
      "txHash": "0x615932089db1e2690acca065d17b271177b4438c256687d5b0c93f92da043141",
      "kind": "uups"
    },
    {
      "address": "0x662FF0DC20168BE5f715079B5D0805C5F2b9c361",
      "txHash": "0xc6e6c82f329d0ade05caf0b4f13db93929c59d5e80e579b822d1979c38326ca5",
      "kind": "uups"
    }
  ],
  "impls": {
    "d20e286cd64f5e4aa2c7bb7c4beca0b6e6bcdd4dc126197b65bb406f502cb0f6": {
      "address": "0xDC63997d5df6CCf94ad45b8337C8522679D68A4e",
      "txHash": "0x32286491d1797e892d3ff4291080835160a7afd492ffd601658c9f475dc63888",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IUniswapV2Router02)9636",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:24"
          },
          {
            "label": "cooldownPeriodBlocks",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:28"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:30"
          },
          {
            "label": "operationsWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:31"
          },
          {
            "label": "isLimitsEnabled",
            "offset": 20,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:33"
          },
          {
            "label": "isCooldownEnabled",
            "offset": 21,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:34"
          },
          {
            "label": "isTaxEnabled",
            "offset": 22,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:35"
          },
          {
            "label": "inSwapBack",
            "offset": 23,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:36"
          },
          {
            "label": "isLaunched",
            "offset": 24,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:37"
          },
          {
            "label": "launchBlock",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:39"
          },
          {
            "label": "launchTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:40"
          },
          {
            "label": "lastSwapBackExecutionBlock",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:42"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:44"
          },
          {
            "label": "maxSell",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:45"
          },
          {
            "label": "maxWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:46"
          },
          {
            "label": "swapTokensAtAmount",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:48"
          },
          {
            "label": "buyFee",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:49"
          },
          {
            "label": "sellFee",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:50"
          },
          {
            "label": "transferFee",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:51"
          },
          {
            "label": "isExcludedFromFees",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:56"
          },
          {
            "label": "isExcludedFromLimits",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:57"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:58"
          },
          {
            "label": "_holderLastTransferBlock",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)679_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)289_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)560_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)616_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IUniswapV2Router02)9636": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "65f127e9227f4347176a74a48fbaa8c2d9b1e8da6fe73c7b70667ac37a88d0be": {
      "address": "0x6a5dF2f4D087A4243115309E3CfA36AdFcCa9190",
      "txHash": "0x3bb03bce486ba41c6e65868583ad1157eeb4dae68f11a0761483f12236e8b496",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IUniswapV2Router02)9640",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:24"
          },
          {
            "label": "cooldownPeriodBlocks",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:28"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:30"
          },
          {
            "label": "operationsWallet",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:31"
          },
          {
            "label": "isLimitsEnabled",
            "offset": 20,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:33"
          },
          {
            "label": "isCooldownEnabled",
            "offset": 21,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:34"
          },
          {
            "label": "isTaxEnabled",
            "offset": 22,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:35"
          },
          {
            "label": "inSwapBack",
            "offset": 23,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:36"
          },
          {
            "label": "isLaunched",
            "offset": 24,
            "slot": "3",
            "type": "t_bool",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:37"
          },
          {
            "label": "launchBlock",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:39"
          },
          {
            "label": "launchTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:40"
          },
          {
            "label": "lastSwapBackExecutionBlock",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:42"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:44"
          },
          {
            "label": "maxSell",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:45"
          },
          {
            "label": "maxWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:46"
          },
          {
            "label": "swapTokensAtAmount",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:48"
          },
          {
            "label": "buyFee",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:49"
          },
          {
            "label": "sellFee",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:50"
          },
          {
            "label": "transferFee",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:51"
          },
          {
            "label": "isExcludedFromFees",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:56"
          },
          {
            "label": "isExcludedFromLimits",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:57"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:58"
          },
          {
            "label": "_holderLastTransferBlock",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Cipher",
            "src": "contracts\\Cipher.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)679_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)289_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)560_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)616_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IUniswapV2Router02)9640": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a09b815d07bff85252a1a4ef937a06bf38e964ec71fa8d4385e87a3de724d5b9": {
      "address": "0xD4312825033Ef01A5F7CFb9F239000A238508D97",
      "txHash": "0x432c284c02fa8591cb74729cd9b6cdbca4c296c53e058404c4d0a63068d2ab31",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IUniswapV2Router02)9569",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:24"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:29"
          },
          {
            "label": "operationsWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:30"
          },
          {
            "label": "isLimitsEnabled",
            "offset": 20,
            "slot": "2",
            "type": "t_bool",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:32"
          },
          {
            "label": "isTaxEnabled",
            "offset": 21,
            "slot": "2",
            "type": "t_bool",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:33"
          },
          {
            "label": "inSwapBack",
            "offset": 22,
            "slot": "2",
            "type": "t_bool",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:34"
          },
          {
            "label": "isLaunched",
            "offset": 23,
            "slot": "2",
            "type": "t_bool",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:35"
          },
          {
            "label": "lastSwapBackExecutionBlock",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:37"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:39"
          },
          {
            "label": "maxSell",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:40"
          },
          {
            "label": "maxWallet",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:41"
          },
          {
            "label": "swapTokensAtAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:43"
          },
          {
            "label": "buyFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:44"
          },
          {
            "label": "sellFee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:45"
          },
          {
            "label": "transferFee",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:46"
          },
          {
            "label": "isExcludedFromFees",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:51"
          },
          {
            "label": "isExcludedFromLimits",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:52"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)679_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)289_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)560_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)616_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IUniswapV2Router02)9569": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a96705c4a40f1717a525d1e3d4aea587590feeb6a64051fd3207e38b60de4dcb": {
      "address": "0x957059C81eE9AAc9ADc446732d8aBdA8AeaA82F2",
      "txHash": "0x9188f41528877a98338700cfbb291db7e7d9a9e67e5834e50ddd5f031982a17b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IUniswapV2Router02)11085",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:24"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:29"
          },
          {
            "label": "operationsWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:30"
          },
          {
            "label": "isLimitsEnabled",
            "offset": 20,
            "slot": "2",
            "type": "t_bool",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:32"
          },
          {
            "label": "isTaxEnabled",
            "offset": 21,
            "slot": "2",
            "type": "t_bool",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:33"
          },
          {
            "label": "inSwapBack",
            "offset": 22,
            "slot": "2",
            "type": "t_bool",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:34"
          },
          {
            "label": "isLaunched",
            "offset": 23,
            "slot": "2",
            "type": "t_bool",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:35"
          },
          {
            "label": "lastSwapBackExecutionBlock",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:37"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:39"
          },
          {
            "label": "maxSell",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:40"
          },
          {
            "label": "maxWallet",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:41"
          },
          {
            "label": "swapTokensAtAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:43"
          },
          {
            "label": "buyFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:44"
          },
          {
            "label": "sellFee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:45"
          },
          {
            "label": "transferFee",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:46"
          },
          {
            "label": "isExcludedFromFees",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:51"
          },
          {
            "label": "isExcludedFromLimits",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:52"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CenterFruit",
            "src": "contracts\\CenterFruit.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)805_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)289_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)624_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)742_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IUniswapV2Router02)11085": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "92f029ac32f30067d266f0e466c3bd79a8d86d5094b7d5b78c1e6803edacf7d5": {
      "address": "0x51f6dA74854b67048A05639345AFcefa3BB34BCd",
      "txHash": "0x54680f20d110e41e4b3eec190f6ad711082a498ed48f014cf9dbebbf075b5d21",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IUniswapV2Router02)9229",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:27"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:28"
          },
          {
            "label": "operationsWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:29"
          },
          {
            "label": "isLimitsEnabled",
            "offset": 20,
            "slot": "2",
            "type": "t_bool",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:31"
          },
          {
            "label": "isTaxEnabled",
            "offset": 21,
            "slot": "2",
            "type": "t_bool",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:32"
          },
          {
            "label": "inSwapBack",
            "offset": 22,
            "slot": "2",
            "type": "t_bool",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:33"
          },
          {
            "label": "isLaunched",
            "offset": 23,
            "slot": "2",
            "type": "t_bool",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:34"
          },
          {
            "label": "lastSwapBackExecutionBlock",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:36"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:38"
          },
          {
            "label": "maxSell",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:39"
          },
          {
            "label": "maxWallet",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:40"
          },
          {
            "label": "swapTokensAtAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:42"
          },
          {
            "label": "buyFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:43"
          },
          {
            "label": "sellFee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:44"
          },
          {
            "label": "transferFee",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:45"
          },
          {
            "label": "isExcludedFromFees",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:47"
          },
          {
            "label": "isExcludedFromLimits",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:48"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Basic",
            "src": "contracts\\Basic.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)679_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)289_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)560_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)616_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IUniswapV2Router02)9229": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7b82e6b339745902a7e6f80d1b085671ca3c4d9abd585eb7c7b9e617bb163c31": {
      "address": "0x4b548Ceda7225C66d8bCA8fDa683F135a035a218",
      "txHash": "0x14fd399c0505ad9003776b926d16d563bb9ca5e3ad25fc2ac22388594cdb000d",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IUniswapV2Router02)12318",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:29"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:30"
          },
          {
            "label": "operationsWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:31"
          },
          {
            "label": "isLimitsEnabled",
            "offset": 20,
            "slot": "2",
            "type": "t_bool",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:33"
          },
          {
            "label": "isTaxEnabled",
            "offset": 21,
            "slot": "2",
            "type": "t_bool",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:34"
          },
          {
            "label": "inSwapBack",
            "offset": 22,
            "slot": "2",
            "type": "t_bool",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:35"
          },
          {
            "label": "isLaunched",
            "offset": 23,
            "slot": "2",
            "type": "t_bool",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:36"
          },
          {
            "label": "lastSwapBackExecutionBlock",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:38"
          },
          {
            "label": "maxBuy",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:40"
          },
          {
            "label": "maxSell",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:41"
          },
          {
            "label": "maxWallet",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:42"
          },
          {
            "label": "swapTokensAtAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:44"
          },
          {
            "label": "buyFee",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:45"
          },
          {
            "label": "sellFee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:46"
          },
          {
            "label": "transferFee",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:47"
          },
          {
            "label": "isExcludedFromFees",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:52"
          },
          {
            "label": "isExcludedFromLimits",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:53"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:54"
          },
          {
            "label": "isBlocked",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)772_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)289_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)591_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)645_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)709_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IUniswapV2Router02)12318": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "06e7107da8d32c34dbc9f07fff11d6c296dd3ef81e220c87383a02bb00ea7128": {
      "address": "0xD09DF723aAb95c66c6450CCFE9544e3460669b5E",
      "txHash": "0xbb4c425a4e3def1196c11fa2ef9a1fe52eca56b8801a4917d8c838e5779f4aa3",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IUniswapV2Router02)12352",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:39"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:40"
          },
          {
            "label": "operationsWallet",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:41"
          },
          {
            "label": "isLimitsEnabled",
            "offset": 20,
            "slot": "2",
            "type": "t_bool",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:44"
          },
          {
            "label": "isTaxEnabled",
            "offset": 21,
            "slot": "2",
            "type": "t_bool",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:45"
          },
          {
            "label": "inSwapBack",
            "offset": 22,
            "slot": "2",
            "type": "t_bool",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:46"
          },
          {
            "label": "isLaunched",
            "offset": 23,
            "slot": "2",
            "type": "t_bool",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:47"
          },
          {
            "label": "limits",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Limits)8878_storage",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:55"
          },
          {
            "label": "swapTokensAtAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:58"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Fees)8890_storage",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:66"
          },
          {
            "label": "isExcludedFromFees",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:73"
          },
          {
            "label": "isExcludedFromLimits",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:74"
          },
          {
            "label": "automatedMarketMakerPairs",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:75"
          },
          {
            "label": "lastSwapBackExecutionBlock",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:78"
          },
          {
            "label": "isBlocked",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Kala",
            "src": "contracts\\Kala.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)772_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)289_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)145_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)591_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)645_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)709_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IUniswapV2Router02)12352": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_struct(Fees)8890_storage": {
            "label": "struct Kala.Fees",
            "members": [
              {
                "label": "buyFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "transferFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Limits)8878_storage": {
            "label": "struct Kala.Limits",
            "members": [
              {
                "label": "maxBuy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxSell",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWallet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
